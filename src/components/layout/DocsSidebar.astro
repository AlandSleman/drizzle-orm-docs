---
import type { IHeading, TreeNode } from "@/types/astro";
import AsideSocials from "./AsideSocials.astro";
import SidebarContentWrap from "./SidebarContentWrap.astro";
import getContentTree from "@/utils/getContentTree";

interface Props {
  tree: TreeNode[];
  headings: IHeading[];
}

const { slug } = Astro.params;
const { tree, headings } = Astro.props;
---

<div class="aside invisible" id="aside">
  <div class="aside-content aside-scroll scrollbar">
    <SidebarContentWrap filteredHeadings={headings} slug={slug} tree={tree} />

    <div class="theme__mobile">
      <div class="theme__current-btn theme__current-btn-select">
        <select
          id="theme__select"
          aria-label="Theme selector"
          title="Select theme"
          class="theme__select"
        >
          <option value="system">System</option>
          <option value="light">Light</option>
          <option value="dark">Dark</option>
        </select>
        <div class="theme_icon" data-current-theme-icon>
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M12 23C18.0751 23 23 18.0751 23 12C23 5.92488 18.0751 1.00001 12 1V23Z"
              fill="currentColor"></path>
          </svg>
        </div>
        <div class="theme__chevron">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="14"
            height="14"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="feather feather-chevron-down"
          >
            <polyline points="6 9 12 15 18 9"></polyline></svg
          >
        </div>
      </div>
    </div>
    <AsideSocials />
  </div>
</div>
<script is:inline>
  const leftSidebar = document.querySelector(".aside-scroll");
  const navItems = document.querySelectorAll("[data-nav-index]");
  const headingsContainer = document.querySelector("[data-headings]");
  const headingsContainerHeight = headingsContainer?.clientHeight;
  let itemIndex = 0;

  const activeNavItem = Array.from(navItems).find((item) => {
    return item.classList.contains("nav-item--active");
  });

  if (activeNavItem) {
    itemIndex = +(activeNavItem.getAttribute("data-nav-index") || 0);
  }
  if (headingsContainerHeight && navItems && leftSidebar) {
    navItems.forEach((item) => {
      item.addEventListener("click", () => {
        const nextIndex = +item.getAttribute("data-nav-index");
        const scrollTop =
          leftSidebar.scrollTop -
          (nextIndex > itemIndex ? headingsContainerHeight : 0);
        localStorage.setItem("sidebar-scroll", scrollTop.toString());
      });
    });

    const leftSidebarScroll = localStorage.getItem("sidebar-scroll");
    if (leftSidebarScroll !== null) {
      leftSidebar.scrollTop = parseInt(leftSidebarScroll, 10);
    }
  }
</script>
<style is:global>
  html[class~="dark"] .aside {
    border-right: 1px solid #303030;
  }

  .aside {
    height: 100%;
    border-right: 1px solid #efefef;
    display: flex;
    flex-direction: column;
    transition-property: all;
    transition-duration: 0.15s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    position: sticky;
    width: 256px;
    flex-shrink: 0;
    align-self: flex-start;
    box-shadow:
      rgba(0, 0, 0, 0) 0px 0px 0px 0px,
      rgba(0, 0, 0, 0) 0px 0px 0px 0px,
      rgba(0, 0, 0, 0.02) 0px 2px 4px 0px,
      rgba(0, 0, 0, 0.06) 1px 0px 0px 0px;
    mask-image: linear-gradient(
      to bottom,
      #000,
      #000 calc(100% - 20px),
      transparent
    );
  }

  .aside-scroll {
    padding: 0 16px 0 24px;
  }

  @media screen and (max-width: 768px) {
    html.dark .aside {
      background: #111;
      border-right: none;
    }

    .aside {
      z-index: 100;
      position: absolute;
      top: 104px;
      height: calc(100% - 104px);
      left: 0;
      width: 100%;
      background: #fff;
      mask-image: none;
      border-right: none;
    }

    .aside .logo-wrap {
      display: none;
    }

    .aside-scroll {
      padding: 0 16px 0 16px;
    }
  }
</style>
