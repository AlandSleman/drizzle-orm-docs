---
import EndOfContent from "@components/layout/EndOfContent.astro";
import GlobalStyles from "@components/layout/GlobalStyles.astro";
import MDXStyles from "@components/layout/MDXStyles.astro";
import Banner from "@components/layout/Banner.astro";
import SidebarWrap from "@components/layout/SidebarWrap.astro";
import Footer from "@components/layout/Footer.astro";
import getContentTree from "@/utils/getContentTree";
import Navbar from "@components/layout/Navbar/Navbar.astro";

const { tree, filteredHeadings } = await getContentTree({});
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, viewport-fit=cover"
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <title>Drizzle ORM - Benchmarks</title>
    <meta
      name="description"
      content="Drizzle ORM is a lightweight and performant TypeScript ORM with developer experience in mind."
    />
    <meta property="og:title" content="Drizzle ORM - next gen TypeScript ORM" />
    <meta
      property="og:description"
      content="Drizzle ORM is a lightweight and performant TypeScript ORM with developer experience in mind."
    />
    <script is:inline>
      const setPreference = (themeName) => {
        localStorage.setItem("theme", themeName);
        if (!document.firstElementChild) return;
        if (themeName === "system") {
          themeName = window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        }
        document.firstElementChild.classList.toggle(
          "dark",
          themeName === "dark",
        );
        document.firstElementChild.classList.toggle(
          "light",
          themeName !== "dark",
        );
        document.firstElementChild.setAttribute(
          "style",
          themeName === "dark" ? "color-scheme: dark" : "color-scheme: light",
        );
      };

      const getColorPreference = () => {
        let preference = localStorage.getItem("theme");
        if (preference === "system") {
          return preference;
        }

        if (!preference) {
          preference = window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        }
        return preference;
      };

      setPreference(getColorPreference());
    </script>
    <link
      rel="preconnect"
      href="https://MXZNUT59HV-dsn.algolia.net"
      crossorigin
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/@docsearch/css@3"
    />
    <link rel="stylesheet" href="/preferred.css" />
    <script is:inline src="https://cdn.jsdelivr.net/npm/@docsearch/js@3"
    ></script>
    <script
      is:inline
      type="module"
      src="https://unpkg.com/@inkeep/widgets-embed@0.2.238/dist/embed.js"
    ></script>
  </head>
  <body class="banner-shown">
    <GlobalStyles />
    <MDXStyles />
    <Banner />
    <Navbar />
    <main class="documentation-container">
      <SidebarWrap filteredHeadings={filteredHeadings} tree={tree} />
      <div class="documentation-content-wrap scrollbar">
        <div class="documentation-content">
          <slot />
          <EndOfContent />
          <Footer />
        </div>
      </div>
    </main>
  </body>
  <style is:global>
    .documentation-header {
      position: -webkit-sticky;
      position: sticky;
      top: 0;
      z-index: 20;
      width: 100%;
    }

    .documentation-content-wrap {
      display: flex;
      width: 100%;
      overflow-y: scroll;
      overflow-x: hidden;
    }

    .navigation_nav_container_blur {
      -webkit-backdrop-filter: blur(12px);
      backdrop-filter: blur(12px);
      pointer-events: none;
      position: absolute;
      z-index: -1;
      height: 100%;
      width: 100%;
      background-color: hsla(0, 0%, 100%, 0.85);
      box-shadow:
        0 0 0 0 transparent,
        0 0 0 0 transparent,
        0 2px 4px 0 rgba(0, 0, 0, 0.02),
        0 1px 0 0 rgba(0, 0, 0, 0.06);
    }
    .navigation_nav_content_wrap {
      margin-left: auto;
      margin-right: auto;
      display: flex;
      height: 64px;
      max-width: 1440px;
      align-items: center;
      gap: 8px;
      padding-left: max(env(safe-area-inset-left), 24px);
      padding-right: max(env(safe-area-inset-right), 24px);
    }
    .documentation-container {
      max-width: 1440px;
      width: 100%;
      display: flex;
      margin: 0 auto;
    }

    body[class~="banner-shown"] .documentation-container {
      max-height: calc(100vh - 104px);
    }

    .documentation-content {
      padding-left: 48px;
      padding-right: 40px;
      padding-top: 1rem;
      width: 100%;
      max-width: 892px;
    }

    @media screen and (max-width: 1279px) {
      .documentation-content {
        padding-left: 24px;
        padding-right: 12px;
      }
    }

    @media screen and (max-width: 1024px) {
      .right-aside-container {
        display: none;
      }
    }

    @media screen and (max-width: 768px) {
      .documentation-content {
        padding-left: 16px;
        padding-right: 16px;
        padding-top: 1rem;
        width: 100%;
      }
    }
  </style>
</html>
<script>
  const hash = window.location.hash;
  if (hash !== "") {
    const targetElement = document.querySelector(hash);
    if (targetElement) {
      targetElement.scrollIntoView();
    }
  }
</script>
